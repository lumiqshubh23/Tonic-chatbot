{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{authAPI}from'../services/api';import toast from'react-hot-toast';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(false);const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);// Check for persistent login on mount\nuseEffect(()=>{const checkPersistentLogin=()=>{const authToken=localStorage.getItem('authToken');const username=localStorage.getItem('username');if(authToken&&username){// For JWT tokens, we could validate them here\n// For now, we'll just check if they exist\nsetIsAuthenticated(true);setUser(username);}setLoading(false);};checkPersistentLogin();},[]);const login=async function(username,password){let rememberMe=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;try{const response=await authAPI.login(username,password,rememberMe);if(response.success){setIsAuthenticated(true);setUser(response.username);// Store JWT token and user info\nlocalStorage.setItem('authToken',response.token);localStorage.setItem('username',response.username);if(rememberMe){localStorage.setItem('loginTime',(Date.now()/1000).toString());toast.success('Login successful - You\\'ll stay logged in even after page refresh!');}else{toast.success('Login successful!');}return true;}else{toast.error(response.message||'Invalid username or password');return false;}}catch(error){console.error('Login error:',error);toast.error('Login failed. Please try again.');return false;}};const logout=async()=>{try{// Show loading state\ntoast.loading('Logging out...',{id:'logout'});await authAPI.logout();// Clear all local data\nsetIsAuthenticated(false);setUser(null);localStorage.removeItem('authToken');localStorage.removeItem('username');localStorage.removeItem('loginTime');// Clear any other stored data\nsessionStorage.clear();toast.success('Logged out successfully!',{id:'logout'});// Redirect to login page\nwindow.location.href='/login';}catch(error){console.error('Logout error:',error);// Even if backend logout fails, clear local data\nsetIsAuthenticated(false);setUser(null);localStorage.removeItem('authToken');localStorage.removeItem('username');localStorage.removeItem('loginTime');sessionStorage.clear();toast.success('Logged out successfully!',{id:'logout'});window.location.href='/login';}};const value={isAuthenticated,user,loading,login,logout};if(loading){return/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center',alignItems:'center',height:'100vh'},children:/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"})});}return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","toast","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","checkPersistentLogin","authToken","localStorage","getItem","username","login","password","rememberMe","arguments","length","undefined","response","success","setItem","token","Date","now","toString","error","message","console","logout","id","removeItem","sessionStorage","clear","window","location","href","value","style","display","justifyContent","alignItems","height","className","Provider"],"sources":["/home/shubham/Documents/Personal/my-project/react-app/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport toast from 'react-hot-toast';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check for persistent login on mount\n  useEffect(() => {\n    const checkPersistentLogin = () => {\n      const authToken = localStorage.getItem('authToken');\n      const username = localStorage.getItem('username');\n\n      if (authToken && username) {\n        // For JWT tokens, we could validate them here\n        // For now, we'll just check if they exist\n        setIsAuthenticated(true);\n        setUser(username);\n      }\n      setLoading(false);\n    };\n\n    checkPersistentLogin();\n  }, []);\n\n  const login = async (username, password, rememberMe = false) => {\n    try {\n      const response = await authAPI.login(username, password, rememberMe);\n      \n      if (response.success) {\n        setIsAuthenticated(true);\n        setUser(response.username);\n\n        // Store JWT token and user info\n        localStorage.setItem('authToken', response.token);\n        localStorage.setItem('username', response.username);\n        \n        if (rememberMe) {\n          localStorage.setItem('loginTime', (Date.now() / 1000).toString());\n          toast.success('Login successful - You\\'ll stay logged in even after page refresh!');\n        } else {\n          toast.success('Login successful!');\n        }\n\n        return true;\n      } else {\n        toast.error(response.message || 'Invalid username or password');\n        return false;\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      toast.error('Login failed. Please try again.');\n      return false;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      // Show loading state\n      toast.loading('Logging out...', { id: 'logout' });\n      \n      await authAPI.logout();\n      \n      // Clear all local data\n      setIsAuthenticated(false);\n      setUser(null);\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('username');\n      localStorage.removeItem('loginTime');\n      \n      // Clear any other stored data\n      sessionStorage.clear();\n      \n      toast.success('Logged out successfully!', { id: 'logout' });\n      \n      // Redirect to login page\n      window.location.href = '/login';\n    } catch (error) {\n      console.error('Logout error:', error);\n      \n      // Even if backend logout fails, clear local data\n      setIsAuthenticated(false);\n      setUser(null);\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('username');\n      localStorage.removeItem('loginTime');\n      sessionStorage.clear();\n      \n      toast.success('Logged out successfully!', { id: 'logout' });\n      window.location.href = '/login';\n    }\n  };\n\n  const value = {\n    isAuthenticated,\n    user,\n    loading,\n    login,\n    logout\n  };\n\n  if (loading) {\n    return <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n      <div className=\"spinner\"></div>\n    </div>;\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}