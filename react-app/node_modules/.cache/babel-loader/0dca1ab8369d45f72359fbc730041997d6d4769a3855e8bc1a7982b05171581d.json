{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Documents/Personal/my-project/react-app/src/components/ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport FileUpload from './FileUpload';\nimport ChatMessage from './ChatMessage';\nimport { Send, Paperclip, X } from 'lucide-react';\nimport styled from 'styled-components';\nimport toast from 'react-hot-toast';\nimport { fileAPI, chatAPI, chatHistoryAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 105px);\n  background: #f7fafc;\n`;\n\n// FileUploadSection component removed as it's no longer used\n_c = ChatContainer;\nconst ChatSection = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  min-height: 0;\n`;\n_c2 = ChatSection;\nconst MessagesContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 0;\n  background: #f7fafc;\n  min-height: 0;\n  max-height: calc(100vh - 200px);\n`;\n_c3 = MessagesContainer;\nconst InputSection = styled.div`\n  padding: 24px;\n  background: white;\n  border-top: 1px solid #e2e8f0;\n  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);\n  position: sticky;\n  bottom: 0;\n  z-index: 10;\n  flex-shrink: 0;\n  transition: all 0.2s ease;\n  min-height: 80px;\n  display: flex;\n  align-items: center;\n`;\n_c4 = InputSection;\nconst InputForm = styled.form`\n  display: flex;\n  gap: 12px;\n  align-items: flex-end;\n  width: 100%;\n  flex: 1;\n`;\n_c5 = InputForm;\nconst TextArea = styled.textarea`\n  flex: 1;\n  padding: 16px 20px;\n  border: 1px solid #e2e8f0;\n  border-radius: 12px;\n  font-size: 16px;\n  font-family: inherit;\n  resize: none;\n  min-height: 60px;\n  max-height: 200px;\n  background: white;\n  transition: all 0.2s ease;\n  overflow-y: auto;\n  line-height: 1.5;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  \n  &:focus {\n    outline: none;\n    border-color: #FF6B35;\n    box-shadow: 0 0 0 3px rgba(255, 107, 53, 0.1);\n  }\n  \n  &::placeholder {\n    color: #a0aec0;\n  }\n`;\n_c6 = TextArea;\nconst SendButton = styled.button`\n  padding: 16px 24px;\n  background: linear-gradient(135deg, #FF6B35 0%, #e53e3e 100%);\n  color: white;\n  border: none;\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-weight: 600;\n  font-size: 14px;\n  min-height: 48px;\n  white-space: nowrap;\n  \n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: 0 10px 25px rgba(255, 107, 53, 0.3);\n  }\n  \n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n_c7 = SendButton;\nconst UploadButton = styled.button`\n  padding: 16px;\n  background: none;\n  border: none;\n  color: #718096;\n  cursor: pointer;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s ease;\n  min-width: 48px;\n  height: 48px;\n  \n  &:hover {\n    background: #f7fafc;\n    color: #FF6B35;\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n_c8 = UploadButton;\nconst UploadInterface = styled.div`\n  position: absolute;\n  bottom: 100%;\n  left: 0;\n  right: 0;\n  background: white;\n  border: 1px solid #e2e8f0;\n  border-radius: 12px;\n  box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.1);\n  margin-bottom: 10px;\n  z-index: 20;\n  animation: slideUp 0.2s ease;\n  \n  @keyframes slideUp {\n    from {\n      opacity: 0;\n      transform: translateY(10px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n`;\n_c9 = UploadInterface;\nconst UploadHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px 20px;\n  border-bottom: 1px solid #e2e8f0;\n`;\n_c0 = UploadHeader;\nconst UploadTitle = styled.h4`\n  color: #2d3748;\n  margin: 0;\n  font-weight: 600;\n  font-size: 16px;\n`;\n_c1 = UploadTitle;\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  color: #718096;\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  &:hover {\n    background: #f7fafc;\n    color: #e53e3e;\n  }\n`;\n_c10 = CloseButton;\nconst InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  gap: 12px;\n  align-items: flex-end;\n  width: 100%;\n`;\n_c11 = InputWrapper;\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 60px 20px;\n  color: #718096;\n  \n  h3 {\n    margin-bottom: 12px;\n    color: #4a5568;\n    font-weight: 600;\n  }\n  \n  p {\n    margin-bottom: 20px;\n    font-size: 16px;\n  }\n`;\n_c12 = EmptyState;\nconst LoadingContainer = styled.div`\n  text-align: center;\n  padding: 40px 20px;\n  color: #718096;\n  \n  .spinner {\n    margin: 0 auto 16px auto;\n  }\n  \n  p {\n    font-size: 16px;\n    margin: 0;\n  }\n`;\n_c13 = LoadingContainer;\nconst KnowledgeBaseStatus = styled.div`\n  margin: 20px;\n  padding: 16px;\n  background: white;\n  border-radius: 12px;\n  border: 1px solid #e2e8f0;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n`;\n_c14 = KnowledgeBaseStatus;\nconst StatusHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 12px;\n`;\n_c15 = StatusHeader;\nconst StatusTitle = styled.h4`\n  color: #2d3748;\n  margin: 0;\n  font-weight: 600;\n  font-size: 16px;\n`;\n_c16 = StatusTitle;\nconst ClearButton = styled.button`\n  padding: 6px 12px;\n  background: #e53e3e;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 12px;\n  font-weight: 500;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: #c53030;\n  }\n`;\n_c17 = ClearButton;\nconst StatusText = styled.p`\n  color: #718096;\n  margin: 0;\n  font-size: 14px;\n`;\n_c18 = StatusText;\nfunction ChatInterface({\n  currentSessionId,\n  currentSessionData,\n  onSessionChange,\n  onSessionRenamed\n}) {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n  const [knowledgeBase, setKnowledgeBase] = useState('');\n  const [showFileUpload, setShowFileUpload] = useState(false);\n  const [showUploadInterface, setShowUploadInterface] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [loadingMessages, setLoadingMessages] = useState(false);\n  const [isCreatingNewSession, setIsCreatingNewSession] = useState(false);\n  const messagesEndRef = useRef(null);\n  const textareaRef = useRef(null);\n\n  // Function to generate session name based on conversation content (like ChatGPT)\n  const generateSessionName = (question, answer) => {\n    // Extract key words from the question\n    const questionWords = question.toLowerCase().replace(/[^\\w\\s]/g, '') // Remove punctuation\n    .split(/\\s+/).filter(word => word.length > 3) // Filter out short words\n    .slice(0, 3); // Take first 3 meaningful words\n\n    if (questionWords.length === 0) {\n      return 'New Chat';\n    }\n\n    // Create a title from the first few words\n    const title = questionWords.map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n\n    // Limit to reasonable length\n    return title.length > 30 ? title.substring(0, 30) + '...' : title;\n  };\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  const loadSessionMessages = async () => {\n    if (!currentSessionId) return;\n    try {\n      console.log('Loading messages for session:', currentSessionId);\n      setLoadingMessages(true);\n      const response = await chatHistoryAPI.getSessionHistory(currentSessionId);\n      console.log('Session history response:', response);\n      if (response.success) {\n        // Convert database messages to the format expected by ChatMessage component\n        // We need to create separate messages for user questions and AI answers\n        const formattedMessages = [];\n        response.session.messages.forEach(msg => {\n          // Format timestamp for display\n          const timestamp = new Date(msg.timestamp).toLocaleString();\n\n          // Add user question message\n          formattedMessages.push({\n            q: msg.question,\n            a: '',\n            timestamp: timestamp,\n            type: 'user'\n          });\n\n          // Add AI answer message\n          formattedMessages.push({\n            q: '',\n            a: msg.answer,\n            timestamp: timestamp,\n            type: 'ai'\n          });\n        });\n        setMessages(formattedMessages);\n      } else {\n        toast.error('Failed to load session messages');\n      }\n    } catch (error) {\n      console.error('Load session messages error:', error);\n      toast.error('Failed to load session messages');\n    } finally {\n      setLoadingMessages(false);\n    }\n  };\n\n  // Auto-resize textarea function\n  const adjustTextareaHeight = () => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = 'auto';\n      const newHeight = Math.min(textarea.scrollHeight, 200);\n      textarea.style.height = `${newHeight}px`;\n    }\n  };\n\n  // Load messages when session changes\n  useEffect(() => {\n    console.log('Session change detected:', {\n      currentSessionId,\n      isCreatingNewSession,\n      messagesLength: messages.length\n    });\n    if (currentSessionId && !isCreatingNewSession) {\n      console.log('Loading messages for session:', currentSessionId);\n      loadSessionMessages();\n    } else if (!currentSessionId) {\n      console.log('Clearing messages - no session');\n      setMessages([]);\n    } else if (isCreatingNewSession) {\n      console.log('Skipping message load - creating new session');\n    }\n  }, [currentSessionId, isCreatingNewSession]);\n\n  // Clear messages when starting a new chat (session changes from existing to new)\n  useEffect(() => {\n    if (currentSessionId && messages.length > 0) {\n      // Check if this is a new session (message count is 0)\n      if ((currentSessionData === null || currentSessionData === void 0 ? void 0 : currentSessionData.message_count) === 0) {\n        console.log('New session detected, clearing messages');\n        setMessages([]);\n      }\n    } else if (!currentSessionId && messages.length > 0) {\n      // Clear messages when no session is selected (new chat without existing sessions)\n      console.log('No session selected, clearing messages for new chat');\n      setMessages([]);\n    }\n\n    // Clear messages when entering new chat mode\n    if (currentSessionData !== null && currentSessionData !== void 0 && currentSessionData.isNewChatMode && messages.length > 0) {\n      console.log('New chat mode detected, clearing messages');\n      setMessages([]);\n    }\n  }, [currentSessionId, currentSessionData === null || currentSessionData === void 0 ? void 0 : currentSessionData.message_count, currentSessionData === null || currentSessionData === void 0 ? void 0 : currentSessionData.isNewChatMode]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Adjust textarea height when userInput changes\n  useEffect(() => {\n    adjustTextareaHeight();\n  }, [userInput]);\n\n  // Monitor for Chrome extension interference\n  useEffect(() => {\n    const originalFetch = window.fetch;\n    const originalXHROpen = XMLHttpRequest.prototype.open;\n\n    // Monitor fetch requests\n    window.fetch = function (...args) {\n      const url = args[0];\n      if (typeof url === 'string' && url.includes('chrome-extension://')) {\n        var _args$;\n        console.warn('Chrome extension request detected:', {\n          url,\n          method: ((_args$ = args[1]) === null || _args$ === void 0 ? void 0 : _args$.method) || 'GET',\n          timestamp: new Date().toISOString(),\n          stack: new Error().stack\n        });\n      }\n      return originalFetch.apply(this, args);\n    };\n\n    // Monitor XMLHttpRequest\n    XMLHttpRequest.prototype.open = function (method, url, ...args) {\n      if (typeof url === 'string' && url.includes('chrome-extension://')) {\n        console.warn('Chrome extension XMLHttpRequest detected:', {\n          url,\n          method,\n          timestamp: new Date().toISOString(),\n          stack: new Error().stack\n        });\n      }\n      return originalXHROpen.apply(this, [method, url, ...args]);\n    };\n\n    // Cleanup function\n    return () => {\n      window.fetch = originalFetch;\n      XMLHttpRequest.prototype.open = originalXHROpen;\n    };\n  }, []);\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit(e);\n    }\n  };\n\n  // Add handlers to detect and potentially mitigate Chrome extension interference\n  const handleFocus = e => {\n    // Log focus events to help debug extension issues\n    console.log('TextArea focused', {\n      target: e.target,\n      timestamp: new Date().toISOString(),\n      userAgent: navigator.userAgent\n    });\n  };\n  const handleBlur = e => {\n    // Log blur events to help debug extension issues\n    console.log('TextArea blurred', {\n      target: e.target,\n      timestamp: new Date().toISOString()\n    });\n  };\n  const handleInput = e => {\n    // Prevent potential extension interference by ensuring proper event handling\n    setUserInput(e.target.value);\n    adjustTextareaHeight();\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!userInput.trim() || isLoading) return;\n\n    // If no current session, create a default one\n    let sessionId = currentSessionId;\n    let sessionName = (currentSessionData === null || currentSessionData === void 0 ? void 0 : currentSessionData.session_name) || 'Default';\n\n    // Check if we're in new chat mode (no existing chats)\n    const isNewChatMode = (currentSessionData === null || currentSessionData === void 0 ? void 0 : currentSessionData.isNewChatMode) && (currentSessionData === null || currentSessionData === void 0 ? void 0 : currentSessionData.shouldCreateSessionOnFirstMessage);\n    if (!sessionId && !isNewChatMode) {\n      try {\n        console.log('No active session, creating default session...');\n        setIsCreatingNewSession(true);\n        const createResponse = await chatHistoryAPI.createChatSession('Default');\n        if (createResponse.success) {\n          sessionId = createResponse.session.id;\n          sessionName = createResponse.session.session_name;\n          console.log('Default session created:', sessionId);\n\n          // Update the parent component with the new session\n          if (onSessionChange) {\n            onSessionChange({\n              session_id: sessionId,\n              session_name: sessionName,\n              created_at: createResponse.session.created_at,\n              message_count: 0\n            });\n          }\n        } else {\n          console.error('Failed to create default session:', createResponse.message);\n          toast.error(`Failed to create chat session: ${createResponse.message}`);\n          setIsCreatingNewSession(false);\n          return;\n        }\n      } catch (error) {\n        console.error('Error creating default session:', error);\n        toast.error(`Failed to create chat session: ${error.message || 'Unknown error'}`);\n        setIsCreatingNewSession(false);\n        return;\n      }\n    }\n\n    // If in new chat mode, create session now (first message)\n    if (isNewChatMode) {\n      try {\n        console.log('New chat mode: creating session on first message...');\n        setIsCreatingNewSession(true);\n\n        // Generate unique session name based on the first message\n        const question = userInput.trim();\n        const uniqueSessionName = generateSessionName(question, '');\n        console.log('Generated unique session name:', uniqueSessionName);\n        const createResponse = await chatHistoryAPI.createChatSession(uniqueSessionName);\n        if (createResponse.success) {\n          sessionId = createResponse.session.id;\n          sessionName = createResponse.session.session_name;\n          console.log('Session created on first message:', sessionId, 'with name:', sessionName);\n\n          // Update the parent component with the new session\n          if (onSessionChange) {\n            onSessionChange({\n              session_id: sessionId,\n              session_name: sessionName,\n              created_at: createResponse.session.created_at,\n              message_count: 0\n            });\n          }\n        } else {\n          console.error('Failed to create session on first message:', createResponse.message);\n          toast.error(`Failed to create chat session: ${createResponse.message}`);\n          setIsCreatingNewSession(false);\n          return;\n        }\n      } catch (error) {\n        console.error('Error creating session on first message:', error);\n        toast.error(`Failed to create chat session: ${error.message || 'Unknown error'}`);\n        setIsCreatingNewSession(false);\n        return;\n      }\n    }\n    const question = userInput.trim();\n    setUserInput('');\n    setIsLoading(true);\n\n    // Add user message to local state\n    const userMessage = {\n      q: question,\n      a: '',\n      timestamp: new Date().toLocaleString(),\n      type: 'user'\n    };\n    setMessages(prev => [...prev, userMessage]);\n    try {\n      console.log('Sending message to API:', {\n        question,\n        knowledgeBase: knowledgeBase ? 'Present' : 'Empty',\n        sessionId: currentSessionId,\n        currentSessionName: currentSessionData === null || currentSessionData === void 0 ? void 0 : currentSessionData.session_name\n      });\n\n      // Get AI response from backend\n      const response = await chatAPI.sendMessage(question, knowledgeBase, messages, sessionName);\n      if (response.success) {\n        var _response$response, _response$tables, _response$plot, _response$plot_code, _response$sources;\n        // Add AI response as a separate message\n        const aiMessage = {\n          q: '',\n          a: response.response,\n          timestamp: response.timestamp,\n          type: 'ai',\n          tables: response.tables || [],\n          plot: response.plot,\n          plot_code: response.plot_code,\n          sources: response.sources\n        };\n\n        // Debug logging\n        console.log('🤖 AI Response received:', {\n          responseLength: (_response$response = response.response) === null || _response$response === void 0 ? void 0 : _response$response.length,\n          tablesCount: ((_response$tables = response.tables) === null || _response$tables === void 0 ? void 0 : _response$tables.length) || 0,\n          hasPlot: !!response.plot,\n          plotLength: ((_response$plot = response.plot) === null || _response$plot === void 0 ? void 0 : _response$plot.length) || 0,\n          hasPlotCode: !!response.plot_code,\n          plotCodeLength: ((_response$plot_code = response.plot_code) === null || _response$plot_code === void 0 ? void 0 : _response$plot_code.length) || 0,\n          sourcesCount: ((_response$sources = response.sources) === null || _response$sources === void 0 ? void 0 : _response$sources.length) || 0\n        });\n\n        // Additional plot debugging\n        if (response.plot) {\n          console.log('🎨 Plot data received:', {\n            plotDataLength: response.plot.length,\n            plotDataPreview: response.plot.substring(0, 100) + '...'\n          });\n        }\n        if (response.plot_code) {\n          console.log('📝 Plot code received:', {\n            plotCodeLength: response.plot_code.length,\n            plotCodePreview: response.plot_code.substring(0, 200) + '...'\n          });\n        }\n        setMessages(prev => [...prev, aiMessage]);\n\n        // Auto-rename session after first message (like ChatGPT)\n        if (sessionId && sessionName === 'Default') {\n          try {\n            const generatedName = generateSessionName(question, response.response);\n            console.log('Auto-renaming session to:', generatedName);\n            const renameResponse = await chatHistoryAPI.updateChatSession(sessionId, generatedName);\n            if (renameResponse.success) {\n              console.log('Session renamed successfully');\n\n              // Update the parent component with the new session name\n              if (onSessionChange) {\n                onSessionChange({\n                  session_id: sessionId,\n                  session_name: generatedName,\n                  created_at: (currentSessionData === null || currentSessionData === void 0 ? void 0 : currentSessionData.created_at) || new Date().toISOString(),\n                  message_count: 2 // user message + ai response\n                });\n              }\n\n              // Notify parent that session was renamed (for sidebar refresh)\n              if (onSessionRenamed) {\n                onSessionRenamed(sessionId, generatedName);\n              }\n            } else {\n              console.warn('Failed to rename session:', renameResponse.message);\n            }\n          } catch (error) {\n            console.warn('Error renaming session:', error);\n            // Don't show error to user as this is not critical\n          }\n        }\n      } else {\n        toast.error('Failed to get response from AI');\n      }\n    } catch (error) {\n      toast.error('Failed to get response. Please try again.');\n      console.error('Error:', error);\n    } finally {\n      setIsLoading(false);\n      setIsCreatingNewSession(false);\n    }\n  };\n  const handleFileUpload = async files => {\n    setIsUploading(true);\n    try {\n      const response = await fileAPI.upload(files);\n      if (response.success) {\n        setKnowledgeBase(response.knowledge_base);\n        toast.success(response.message);\n        setShowUploadInterface(false);\n      } else {\n        toast.error('Failed to process files');\n      }\n    } catch (error) {\n      console.error('File upload error:', error);\n      toast.error('Failed to upload files. Please try again.');\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  const clearKnowledgeBase = () => {\n    setKnowledgeBase('');\n    toast.success('Knowledge base cleared');\n  };\n\n  // This line is no longer needed as we're using the messages state directly\n\n  return /*#__PURE__*/_jsxDEV(ChatContainer, {\n    children: [knowledgeBase && /*#__PURE__*/_jsxDEV(KnowledgeBaseStatus, {\n      children: [/*#__PURE__*/_jsxDEV(StatusHeader, {\n        children: [/*#__PURE__*/_jsxDEV(StatusTitle, {\n          children: \"\\uD83D\\uDCDA Knowledge Base Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ClearButton, {\n          onClick: clearKnowledgeBase,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StatusText, {\n        children: [\"Knowledge base contains \", knowledgeBase.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 729,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ChatSection, {\n      children: [/*#__PURE__*/_jsxDEV(MessagesContainer, {\n        children: [loadingMessages ? /*#__PURE__*/_jsxDEV(EmptyState, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\",\n            style: {\n              width: '32px',\n              height: '32px',\n              margin: '0 auto 16px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading messages...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 13\n        }, this) : messages.length === 0 ? /*#__PURE__*/_jsxDEV(EmptyState, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"How can I help you today? \\uD83E\\uDD16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: knowledgeBase ? \"I have access to your uploaded documents. Ask me anything!\" : \"I'm here to help! Ask me anything or upload documents to get started.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 13\n        }, this) : messages.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 15\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(LoadingContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\",\n            style: {\n              width: '32px',\n              height: '32px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 767,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Generating response...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSection, {\n        children: /*#__PURE__*/_jsxDEV(InputWrapper, {\n          children: [showUploadInterface && /*#__PURE__*/_jsxDEV(UploadInterface, {\n            children: [/*#__PURE__*/_jsxDEV(UploadHeader, {\n              children: [/*#__PURE__*/_jsxDEV(UploadTitle, {\n                children: \"\\uD83D\\uDCC1 Upload Documents\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 780,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n                onClick: () => setShowUploadInterface(false),\n                children: /*#__PURE__*/_jsxDEV(X, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 782,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 781,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 779,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n              onFileUpload: handleFileUpload,\n              isUploading: isUploading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 785,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(UploadButton, {\n              type: \"button\",\n              onClick: () => setShowUploadInterface(!showUploadInterface),\n              disabled: isLoading,\n              title: \"Upload documents\",\n              children: /*#__PURE__*/_jsxDEV(Paperclip, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 796,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 790,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n              ref: textareaRef,\n              value: userInput,\n              onChange: handleInput,\n              onFocus: handleFocus,\n              onBlur: handleBlur,\n              onKeyDown: handleKeyDown,\n              placeholder: knowledgeBase ? \"Message TONIC AI...\" : \"Message TONIC AI...\",\n              disabled: isLoading\n              // Add attributes to help prevent extension interference\n              ,\n              autoComplete: \"off\",\n              spellCheck: \"false\",\n              \"data-gramm\": \"false\",\n              \"data-gramm_editor\": \"false\",\n              \"data-enable-grammarly\": \"false\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 799,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SendButton, {\n              type: \"submit\",\n              disabled: isLoading || !userInput.trim(),\n              children: [isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"spinner\",\n                style: {\n                  width: '20px',\n                  height: '20px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 821,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Send, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 823,\n                columnNumber: 19\n              }, this), \"Send\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 819,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 727,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatInterface, \"KSFaKW4P3kgdn3dfBEUTnKHF/Hk=\");\n_c19 = ChatInterface;\nexport default ChatInterface;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19;\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"ChatSection\");\n$RefreshReg$(_c3, \"MessagesContainer\");\n$RefreshReg$(_c4, \"InputSection\");\n$RefreshReg$(_c5, \"InputForm\");\n$RefreshReg$(_c6, \"TextArea\");\n$RefreshReg$(_c7, \"SendButton\");\n$RefreshReg$(_c8, \"UploadButton\");\n$RefreshReg$(_c9, \"UploadInterface\");\n$RefreshReg$(_c0, \"UploadHeader\");\n$RefreshReg$(_c1, \"UploadTitle\");\n$RefreshReg$(_c10, \"CloseButton\");\n$RefreshReg$(_c11, \"InputWrapper\");\n$RefreshReg$(_c12, \"EmptyState\");\n$RefreshReg$(_c13, \"LoadingContainer\");\n$RefreshReg$(_c14, \"KnowledgeBaseStatus\");\n$RefreshReg$(_c15, \"StatusHeader\");\n$RefreshReg$(_c16, \"StatusTitle\");\n$RefreshReg$(_c17, \"ClearButton\");\n$RefreshReg$(_c18, \"StatusText\");\n$RefreshReg$(_c19, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","FileUpload","ChatMessage","Send","Paperclip","X","styled","toast","fileAPI","chatAPI","chatHistoryAPI","jsxDEV","_jsxDEV","ChatContainer","div","_c","ChatSection","_c2","MessagesContainer","_c3","InputSection","_c4","InputForm","form","_c5","TextArea","textarea","_c6","SendButton","button","_c7","UploadButton","_c8","UploadInterface","_c9","UploadHeader","_c0","UploadTitle","h4","_c1","CloseButton","_c10","InputWrapper","_c11","EmptyState","_c12","LoadingContainer","_c13","KnowledgeBaseStatus","_c14","StatusHeader","_c15","StatusTitle","_c16","ClearButton","_c17","StatusText","p","_c18","ChatInterface","currentSessionId","currentSessionData","onSessionChange","onSessionRenamed","_s","userInput","setUserInput","isLoading","setIsLoading","isUploading","setIsUploading","knowledgeBase","setKnowledgeBase","showFileUpload","setShowFileUpload","showUploadInterface","setShowUploadInterface","messages","setMessages","loadingMessages","setLoadingMessages","isCreatingNewSession","setIsCreatingNewSession","messagesEndRef","textareaRef","generateSessionName","question","answer","questionWords","toLowerCase","replace","split","filter","word","length","slice","title","map","charAt","toUpperCase","join","substring","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","loadSessionMessages","console","log","response","getSessionHistory","success","formattedMessages","session","forEach","msg","timestamp","Date","toLocaleString","push","q","a","type","error","adjustTextareaHeight","style","height","newHeight","Math","min","scrollHeight","messagesLength","message_count","isNewChatMode","originalFetch","window","fetch","originalXHROpen","XMLHttpRequest","prototype","open","args","url","includes","_args$","warn","method","toISOString","stack","Error","apply","handleKeyDown","e","key","shiftKey","preventDefault","handleSubmit","handleFocus","target","userAgent","navigator","handleBlur","handleInput","value","trim","sessionId","sessionName","session_name","shouldCreateSessionOnFirstMessage","createResponse","createChatSession","id","session_id","created_at","message","uniqueSessionName","userMessage","prev","currentSessionName","sendMessage","_response$response","_response$tables","_response$plot","_response$plot_code","_response$sources","aiMessage","tables","plot","plot_code","sources","responseLength","tablesCount","hasPlot","plotLength","hasPlotCode","plotCodeLength","sourcesCount","plotDataLength","plotDataPreview","plotCodePreview","generatedName","renameResponse","updateChatSession","handleFileUpload","files","upload","knowledge_base","clearKnowledgeBase","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","width","margin","index","ref","size","onFileUpload","onSubmit","disabled","onChange","onFocus","onBlur","onKeyDown","placeholder","autoComplete","spellCheck","_c19","$RefreshReg$"],"sources":["/home/shubham/Documents/Personal/my-project/react-app/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport FileUpload from './FileUpload';\nimport ChatMessage from './ChatMessage';\nimport { Send, Paperclip, X } from 'lucide-react';\nimport styled from 'styled-components';\nimport toast from 'react-hot-toast';\nimport { fileAPI, chatAPI, chatHistoryAPI } from '../services/api';\n\nconst ChatContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 105px);\n  background: #f7fafc;\n`;\n\n// FileUploadSection component removed as it's no longer used\n\nconst ChatSection = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  min-height: 0;\n`;\n\nconst MessagesContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 0;\n  background: #f7fafc;\n  min-height: 0;\n  max-height: calc(100vh - 200px);\n`;\n\nconst InputSection = styled.div`\n  padding: 24px;\n  background: white;\n  border-top: 1px solid #e2e8f0;\n  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);\n  position: sticky;\n  bottom: 0;\n  z-index: 10;\n  flex-shrink: 0;\n  transition: all 0.2s ease;\n  min-height: 80px;\n  display: flex;\n  align-items: center;\n`;\n\nconst InputForm = styled.form`\n  display: flex;\n  gap: 12px;\n  align-items: flex-end;\n  width: 100%;\n  flex: 1;\n`;\n\nconst TextArea = styled.textarea`\n  flex: 1;\n  padding: 16px 20px;\n  border: 1px solid #e2e8f0;\n  border-radius: 12px;\n  font-size: 16px;\n  font-family: inherit;\n  resize: none;\n  min-height: 60px;\n  max-height: 200px;\n  background: white;\n  transition: all 0.2s ease;\n  overflow-y: auto;\n  line-height: 1.5;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n  \n  &:focus {\n    outline: none;\n    border-color: #FF6B35;\n    box-shadow: 0 0 0 3px rgba(255, 107, 53, 0.1);\n  }\n  \n  &::placeholder {\n    color: #a0aec0;\n  }\n`;\n\nconst SendButton = styled.button`\n  padding: 16px 24px;\n  background: linear-gradient(135deg, #FF6B35 0%, #e53e3e 100%);\n  color: white;\n  border: none;\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-weight: 600;\n  font-size: 14px;\n  min-height: 48px;\n  white-space: nowrap;\n  \n  &:hover {\n    transform: translateY(-1px);\n    box-shadow: 0 10px 25px rgba(255, 107, 53, 0.3);\n  }\n  \n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n\nconst UploadButton = styled.button`\n  padding: 16px;\n  background: none;\n  border: none;\n  color: #718096;\n  cursor: pointer;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s ease;\n  min-width: 48px;\n  height: 48px;\n  \n  &:hover {\n    background: #f7fafc;\n    color: #FF6B35;\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst UploadInterface = styled.div`\n  position: absolute;\n  bottom: 100%;\n  left: 0;\n  right: 0;\n  background: white;\n  border: 1px solid #e2e8f0;\n  border-radius: 12px;\n  box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.1);\n  margin-bottom: 10px;\n  z-index: 20;\n  animation: slideUp 0.2s ease;\n  \n  @keyframes slideUp {\n    from {\n      opacity: 0;\n      transform: translateY(10px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n`;\n\nconst UploadHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 16px 20px;\n  border-bottom: 1px solid #e2e8f0;\n`;\n\nconst UploadTitle = styled.h4`\n  color: #2d3748;\n  margin: 0;\n  font-weight: 600;\n  font-size: 16px;\n`;\n\nconst CloseButton = styled.button`\n  background: none;\n  border: none;\n  color: #718096;\n  cursor: pointer;\n  padding: 4px;\n  border-radius: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  &:hover {\n    background: #f7fafc;\n    color: #e53e3e;\n  }\n`;\n\nconst InputWrapper = styled.div`\n  position: relative;\n  display: flex;\n  gap: 12px;\n  align-items: flex-end;\n  width: 100%;\n`;\n\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 60px 20px;\n  color: #718096;\n  \n  h3 {\n    margin-bottom: 12px;\n    color: #4a5568;\n    font-weight: 600;\n  }\n  \n  p {\n    margin-bottom: 20px;\n    font-size: 16px;\n  }\n`;\n\nconst LoadingContainer = styled.div`\n  text-align: center;\n  padding: 40px 20px;\n  color: #718096;\n  \n  .spinner {\n    margin: 0 auto 16px auto;\n  }\n  \n  p {\n    font-size: 16px;\n    margin: 0;\n  }\n`;\n\nconst KnowledgeBaseStatus = styled.div`\n  margin: 20px;\n  padding: 16px;\n  background: white;\n  border-radius: 12px;\n  border: 1px solid #e2e8f0;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n`;\n\nconst StatusHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 12px;\n`;\n\nconst StatusTitle = styled.h4`\n  color: #2d3748;\n  margin: 0;\n  font-weight: 600;\n  font-size: 16px;\n`;\n\nconst ClearButton = styled.button`\n  padding: 6px 12px;\n  background: #e53e3e;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  font-size: 12px;\n  font-weight: 500;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: #c53030;\n  }\n`;\n\nconst StatusText = styled.p`\n  color: #718096;\n  margin: 0;\n  font-size: 14px;\n`;\n\nfunction ChatInterface({ currentSessionId, currentSessionData, onSessionChange, onSessionRenamed }) {\n  const [userInput, setUserInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n  const [knowledgeBase, setKnowledgeBase] = useState('');\n  const [showFileUpload, setShowFileUpload] = useState(false);\n  const [showUploadInterface, setShowUploadInterface] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [loadingMessages, setLoadingMessages] = useState(false);\n  const [isCreatingNewSession, setIsCreatingNewSession] = useState(false);\n  const messagesEndRef = useRef(null);\n  const textareaRef = useRef(null);\n\n  // Function to generate session name based on conversation content (like ChatGPT)\n  const generateSessionName = (question, answer) => {\n    // Extract key words from the question\n    const questionWords = question.toLowerCase()\n      .replace(/[^\\w\\s]/g, '') // Remove punctuation\n      .split(/\\s+/)\n      .filter(word => word.length > 3) // Filter out short words\n      .slice(0, 3); // Take first 3 meaningful words\n    \n    if (questionWords.length === 0) {\n      return 'New Chat';\n    }\n    \n    // Create a title from the first few words\n    const title = questionWords\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n    \n    // Limit to reasonable length\n    return title.length > 30 ? title.substring(0, 30) + '...' : title;\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  const loadSessionMessages = async () => {\n    if (!currentSessionId) return;\n    \n    try {\n      console.log('Loading messages for session:', currentSessionId);\n      setLoadingMessages(true);\n      const response = await chatHistoryAPI.getSessionHistory(currentSessionId);\n      console.log('Session history response:', response);\n      \n      if (response.success) {\n        // Convert database messages to the format expected by ChatMessage component\n        // We need to create separate messages for user questions and AI answers\n        const formattedMessages = [];\n        \n        response.session.messages.forEach(msg => {\n          // Format timestamp for display\n          const timestamp = new Date(msg.timestamp).toLocaleString();\n          \n          // Add user question message\n          formattedMessages.push({\n            q: msg.question,\n            a: '',\n            timestamp: timestamp,\n            type: 'user'\n          });\n          \n          // Add AI answer message\n          formattedMessages.push({\n            q: '',\n            a: msg.answer,\n            timestamp: timestamp,\n            type: 'ai'\n          });\n        });\n        \n        setMessages(formattedMessages);\n      } else {\n        toast.error('Failed to load session messages');\n      }\n    } catch (error) {\n      console.error('Load session messages error:', error);\n      toast.error('Failed to load session messages');\n    } finally {\n      setLoadingMessages(false);\n    }\n  };\n\n  // Auto-resize textarea function\n  const adjustTextareaHeight = () => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = 'auto';\n      const newHeight = Math.min(textarea.scrollHeight, 200);\n      textarea.style.height = `${newHeight}px`;\n    }\n  };\n\n  // Load messages when session changes\n  useEffect(() => {\n    console.log('Session change detected:', {\n      currentSessionId,\n      isCreatingNewSession,\n      messagesLength: messages.length\n    });\n    \n    if (currentSessionId && !isCreatingNewSession) {\n      console.log('Loading messages for session:', currentSessionId);\n      loadSessionMessages();\n    } else if (!currentSessionId) {\n      console.log('Clearing messages - no session');\n      setMessages([]);\n    } else if (isCreatingNewSession) {\n      console.log('Skipping message load - creating new session');\n    }\n  }, [currentSessionId, isCreatingNewSession]);\n\n  // Clear messages when starting a new chat (session changes from existing to new)\n  useEffect(() => {\n    if (currentSessionId && messages.length > 0) {\n      // Check if this is a new session (message count is 0)\n      if (currentSessionData?.message_count === 0) {\n        console.log('New session detected, clearing messages');\n        setMessages([]);\n      }\n    } else if (!currentSessionId && messages.length > 0) {\n      // Clear messages when no session is selected (new chat without existing sessions)\n      console.log('No session selected, clearing messages for new chat');\n      setMessages([]);\n    }\n    \n    // Clear messages when entering new chat mode\n    if (currentSessionData?.isNewChatMode && messages.length > 0) {\n      console.log('New chat mode detected, clearing messages');\n      setMessages([]);\n    }\n  }, [currentSessionId, currentSessionData?.message_count, currentSessionData?.isNewChatMode]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Adjust textarea height when userInput changes\n  useEffect(() => {\n    adjustTextareaHeight();\n  }, [userInput]);\n\n  // Monitor for Chrome extension interference\n  useEffect(() => {\n    const originalFetch = window.fetch;\n    const originalXHROpen = XMLHttpRequest.prototype.open;\n    \n    // Monitor fetch requests\n    window.fetch = function(...args) {\n      const url = args[0];\n      if (typeof url === 'string' && url.includes('chrome-extension://')) {\n        console.warn('Chrome extension request detected:', {\n          url,\n          method: args[1]?.method || 'GET',\n          timestamp: new Date().toISOString(),\n          stack: new Error().stack\n        });\n      }\n      return originalFetch.apply(this, args);\n    };\n    \n    // Monitor XMLHttpRequest\n    XMLHttpRequest.prototype.open = function(method, url, ...args) {\n      if (typeof url === 'string' && url.includes('chrome-extension://')) {\n        console.warn('Chrome extension XMLHttpRequest detected:', {\n          url,\n          method,\n          timestamp: new Date().toISOString(),\n          stack: new Error().stack\n        });\n      }\n      return originalXHROpen.apply(this, [method, url, ...args]);\n    };\n    \n    // Cleanup function\n    return () => {\n      window.fetch = originalFetch;\n      XMLHttpRequest.prototype.open = originalXHROpen;\n    };\n  }, []);\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit(e);\n    }\n  };\n\n  // Add handlers to detect and potentially mitigate Chrome extension interference\n  const handleFocus = (e) => {\n    // Log focus events to help debug extension issues\n    console.log('TextArea focused', {\n      target: e.target,\n      timestamp: new Date().toISOString(),\n      userAgent: navigator.userAgent\n    });\n  };\n\n  const handleBlur = (e) => {\n    // Log blur events to help debug extension issues\n    console.log('TextArea blurred', {\n      target: e.target,\n      timestamp: new Date().toISOString()\n    });\n  };\n\n  const handleInput = (e) => {\n    // Prevent potential extension interference by ensuring proper event handling\n    setUserInput(e.target.value);\n    adjustTextareaHeight();\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!userInput.trim() || isLoading) return;\n\n    // If no current session, create a default one\n    let sessionId = currentSessionId;\n    let sessionName = currentSessionData?.session_name || 'Default';\n    \n    // Check if we're in new chat mode (no existing chats)\n    const isNewChatMode = currentSessionData?.isNewChatMode && currentSessionData?.shouldCreateSessionOnFirstMessage;\n    \n    if (!sessionId && !isNewChatMode) {\n      try {\n        console.log('No active session, creating default session...');\n        setIsCreatingNewSession(true);\n        \n        const createResponse = await chatHistoryAPI.createChatSession('Default');\n        if (createResponse.success) {\n          sessionId = createResponse.session.id;\n          sessionName = createResponse.session.session_name;\n          console.log('Default session created:', sessionId);\n          \n          // Update the parent component with the new session\n          if (onSessionChange) {\n            onSessionChange({\n              session_id: sessionId,\n              session_name: sessionName,\n              created_at: createResponse.session.created_at,\n              message_count: 0\n            });\n          }\n        } else {\n          console.error('Failed to create default session:', createResponse.message);\n          toast.error(`Failed to create chat session: ${createResponse.message}`);\n          setIsCreatingNewSession(false);\n          return;\n        }\n      } catch (error) {\n        console.error('Error creating default session:', error);\n        toast.error(`Failed to create chat session: ${error.message || 'Unknown error'}`);\n        setIsCreatingNewSession(false);\n        return;\n      }\n    }\n    \n    // If in new chat mode, create session now (first message)\n    if (isNewChatMode) {\n      try {\n        console.log('New chat mode: creating session on first message...');\n        setIsCreatingNewSession(true);\n        \n        // Generate unique session name based on the first message\n        const question = userInput.trim();\n        const uniqueSessionName = generateSessionName(question, '');\n        console.log('Generated unique session name:', uniqueSessionName);\n        \n        const createResponse = await chatHistoryAPI.createChatSession(uniqueSessionName);\n        if (createResponse.success) {\n          sessionId = createResponse.session.id;\n          sessionName = createResponse.session.session_name;\n          console.log('Session created on first message:', sessionId, 'with name:', sessionName);\n          \n          // Update the parent component with the new session\n          if (onSessionChange) {\n            onSessionChange({\n              session_id: sessionId,\n              session_name: sessionName,\n              created_at: createResponse.session.created_at,\n              message_count: 0\n            });\n          }\n        } else {\n          console.error('Failed to create session on first message:', createResponse.message);\n          toast.error(`Failed to create chat session: ${createResponse.message}`);\n          setIsCreatingNewSession(false);\n          return;\n        }\n      } catch (error) {\n        console.error('Error creating session on first message:', error);\n        toast.error(`Failed to create chat session: ${error.message || 'Unknown error'}`);\n        setIsCreatingNewSession(false);\n        return;\n      }\n    }\n\n    const question = userInput.trim();\n    setUserInput('');\n    setIsLoading(true);\n\n    // Add user message to local state\n    const userMessage = {\n      q: question,\n      a: '',\n      timestamp: new Date().toLocaleString(),\n      type: 'user'\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n\n    try {\n      console.log('Sending message to API:', {\n        question,\n        knowledgeBase: knowledgeBase ? 'Present' : 'Empty',\n        sessionId: currentSessionId,\n        currentSessionName: currentSessionData?.session_name\n      });\n      \n      // Get AI response from backend\n      const response = await chatAPI.sendMessage(\n        question, \n        knowledgeBase, \n        messages, \n        sessionName\n      );\n      \n      if (response.success) {\n        // Add AI response as a separate message\n        const aiMessage = {\n          q: '',\n          a: response.response,\n          timestamp: response.timestamp,\n          type: 'ai',\n          tables: response.tables || [],\n          plot: response.plot,\n          plot_code: response.plot_code,\n          sources: response.sources\n        };\n\n        // Debug logging\n        console.log('🤖 AI Response received:', {\n          responseLength: response.response?.length,\n          tablesCount: response.tables?.length || 0,\n          hasPlot: !!response.plot,\n          plotLength: response.plot?.length || 0,\n          hasPlotCode: !!response.plot_code,\n          plotCodeLength: response.plot_code?.length || 0,\n          sourcesCount: response.sources?.length || 0\n        });\n        \n        // Additional plot debugging\n        if (response.plot) {\n          console.log('🎨 Plot data received:', {\n            plotDataLength: response.plot.length,\n            plotDataPreview: response.plot.substring(0, 100) + '...'\n          });\n        }\n        \n        if (response.plot_code) {\n          console.log('📝 Plot code received:', {\n            plotCodeLength: response.plot_code.length,\n            plotCodePreview: response.plot_code.substring(0, 200) + '...'\n          });\n        }\n\n        setMessages(prev => [...prev, aiMessage]);\n\n        // Auto-rename session after first message (like ChatGPT)\n        if (sessionId && sessionName === 'Default') {\n          try {\n            const generatedName = generateSessionName(question, response.response);\n            console.log('Auto-renaming session to:', generatedName);\n            \n            const renameResponse = await chatHistoryAPI.updateChatSession(sessionId, generatedName);\n            if (renameResponse.success) {\n              console.log('Session renamed successfully');\n              \n              // Update the parent component with the new session name\n              if (onSessionChange) {\n                onSessionChange({\n                  session_id: sessionId,\n                  session_name: generatedName,\n                  created_at: currentSessionData?.created_at || new Date().toISOString(),\n                  message_count: 2 // user message + ai response\n                });\n              }\n              \n              // Notify parent that session was renamed (for sidebar refresh)\n              if (onSessionRenamed) {\n                onSessionRenamed(sessionId, generatedName);\n              }\n            } else {\n              console.warn('Failed to rename session:', renameResponse.message);\n            }\n          } catch (error) {\n            console.warn('Error renaming session:', error);\n            // Don't show error to user as this is not critical\n          }\n        }\n\n      } else {\n        toast.error('Failed to get response from AI');\n      }\n\n    } catch (error) {\n      toast.error('Failed to get response. Please try again.');\n      console.error('Error:', error);\n    } finally {\n      setIsLoading(false);\n      setIsCreatingNewSession(false);\n    }\n  };\n\n  const handleFileUpload = async (files) => {\n    setIsUploading(true);\n    try {\n      const response = await fileAPI.upload(files);\n      if (response.success) {\n        setKnowledgeBase(response.knowledge_base);\n        toast.success(response.message);\n        setShowUploadInterface(false);\n      } else {\n        toast.error('Failed to process files');\n      }\n    } catch (error) {\n      console.error('File upload error:', error);\n      toast.error('Failed to upload files. Please try again.');\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  const clearKnowledgeBase = () => {\n    setKnowledgeBase('');\n    toast.success('Knowledge base cleared');\n  };\n\n  // This line is no longer needed as we're using the messages state directly\n\n  return (\n    <ChatContainer>\n      {knowledgeBase && (\n        <KnowledgeBaseStatus>\n          <StatusHeader>\n            <StatusTitle>📚 Knowledge Base Active</StatusTitle>\n            <ClearButton onClick={clearKnowledgeBase}>\n              Clear\n            </ClearButton>\n          </StatusHeader>\n          <StatusText>\n            Knowledge base contains {knowledgeBase.length} characters\n          </StatusText>\n        </KnowledgeBaseStatus>\n      )}\n\n      <ChatSection>\n        <MessagesContainer>\n          {loadingMessages ? (\n            <EmptyState>\n              <div className=\"spinner\" style={{ width: '32px', height: '32px', margin: '0 auto 16px' }}></div>\n              <p>Loading messages...</p>\n            </EmptyState>\n          ) : messages.length === 0 ? (\n            <EmptyState>\n              <h3>How can I help you today? 🤖</h3>\n              <p>\n                {knowledgeBase \n                  ? \"I have access to your uploaded documents. Ask me anything!\"\n                  : \"I'm here to help! Ask me anything or upload documents to get started.\"\n                }\n              </p>\n            </EmptyState>\n          ) : (\n            messages.map((message, index) => (\n              <ChatMessage key={index} message={message} />\n            ))\n          )}\n          \n          {isLoading && (\n            <LoadingContainer>\n              <div className=\"spinner\" style={{ width: '32px', height: '32px' }}></div>\n              <p>Generating response...</p>\n            </LoadingContainer>\n          )}\n          \n          <div ref={messagesEndRef} />\n        </MessagesContainer>\n\n        <InputSection>\n          <InputWrapper>\n            {showUploadInterface && (\n              <UploadInterface>\n                <UploadHeader>\n                  <UploadTitle>📁 Upload Documents</UploadTitle>\n                  <CloseButton onClick={() => setShowUploadInterface(false)}>\n                    <X size={20} />\n                  </CloseButton>\n                </UploadHeader>\n                <FileUpload onFileUpload={handleFileUpload} isUploading={isUploading} />\n              </UploadInterface>\n            )}\n            \n            <InputForm onSubmit={handleSubmit}>\n              <UploadButton\n                type=\"button\"\n                onClick={() => setShowUploadInterface(!showUploadInterface)}\n                disabled={isLoading}\n                title=\"Upload documents\"\n              >\n                <Paperclip size={20} />\n              </UploadButton>\n              \n              <TextArea\n                ref={textareaRef}\n                value={userInput}\n                onChange={handleInput}\n                onFocus={handleFocus}\n                onBlur={handleBlur}\n                onKeyDown={handleKeyDown}\n                placeholder={\n                  knowledgeBase \n                    ? \"Message TONIC AI...\"\n                    : \"Message TONIC AI...\"\n                }\n                disabled={isLoading}\n                // Add attributes to help prevent extension interference\n                autoComplete=\"off\"\n                spellCheck=\"false\"\n                data-gramm=\"false\"\n                data-gramm_editor=\"false\"\n                data-enable-grammarly=\"false\"\n              />\n              <SendButton type=\"submit\" disabled={isLoading || !userInput.trim()}>\n                {isLoading ? (\n                  <div className=\"spinner\" style={{ width: '20px', height: '20px' }}></div>\n                ) : (\n                  <Send size={20} />\n                )}\n                Send\n              </SendButton>\n            </InputForm>\n          </InputWrapper>\n        </InputSection>\n      </ChatSection>\n    </ChatContainer>\n  );\n}\n\nexport default ChatInterface;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,IAAI,EAAEC,SAAS,EAAEC,CAAC,QAAQ,cAAc;AACjD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,KAAK,MAAM,iBAAiB;AACnC,SAASC,OAAO,EAAEC,OAAO,EAAEC,cAAc,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,aAAa,GAAGP,MAAM,CAACQ,GAAG;AAChC;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,EAAA,GAPMF,aAAa;AASnB,MAAMG,WAAW,GAAGV,MAAM,CAACQ,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GANID,WAAW;AAQjB,MAAME,iBAAiB,GAAGZ,MAAM,CAACQ,GAAG;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACK,GAAA,GAVID,iBAAiB;AAYvB,MAAME,YAAY,GAAGd,MAAM,CAACQ,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACO,GAAA,GAbID,YAAY;AAelB,MAAME,SAAS,GAAGhB,MAAM,CAACiB,IAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GANIF,SAAS;AAQf,MAAMG,QAAQ,GAAGnB,MAAM,CAACoB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAzBIF,QAAQ;AA2Bd,MAAMG,UAAU,GAAGtB,MAAM,CAACuB,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GA1BIF,UAAU;AA4BhB,MAAMG,YAAY,GAAGzB,MAAM,CAACuB,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAvBID,YAAY;AAyBlB,MAAME,eAAe,GAAG3B,MAAM,CAACQ,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACoB,GAAA,GAvBID,eAAe;AAyBrB,MAAME,YAAY,GAAG7B,MAAM,CAACQ,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACsB,GAAA,GANID,YAAY;AAQlB,MAAME,WAAW,GAAG/B,MAAM,CAACgC,EAAE;AAC7B;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALIF,WAAW;AAOjB,MAAMG,WAAW,GAAGlC,MAAM,CAACuB,MAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACY,IAAA,GAfID,WAAW;AAiBjB,MAAME,YAAY,GAAGpC,MAAM,CAACQ,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC6B,IAAA,GANID,YAAY;AAQlB,MAAME,UAAU,GAAGtC,MAAM,CAACQ,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC+B,IAAA,GAfID,UAAU;AAiBhB,MAAME,gBAAgB,GAAGxC,MAAM,CAACQ,GAAG;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACiC,IAAA,GAbID,gBAAgB;AAetB,MAAME,mBAAmB,GAAG1C,MAAM,CAACQ,GAAG;AACtC;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}