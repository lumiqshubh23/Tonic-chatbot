{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Documents/Personal/my-project/react-app/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check for persistent login on mount\n  useEffect(() => {\n    const checkPersistentLogin = () => {\n      const authToken = localStorage.getItem('authToken');\n      const username = localStorage.getItem('username');\n      if (authToken && username) {\n        // For JWT tokens, we could validate them here\n        // For now, we'll just check if they exist\n        setIsAuthenticated(true);\n        setUser(username);\n      }\n      setLoading(false);\n    };\n    checkPersistentLogin();\n  }, []);\n  const login = async (username, password, rememberMe = false) => {\n    try {\n      const response = await authAPI.login(username, password, rememberMe);\n      if (response.success) {\n        setIsAuthenticated(true);\n        setUser(response.user);\n\n        // Store JWT token and user info\n        localStorage.setItem('authToken', response.token);\n        localStorage.setItem('username', response.user);\n        if (rememberMe) {\n          localStorage.setItem('loginTime', (Date.now() / 1000).toString());\n          toast.success('Login successful - You\\'ll stay logged in even after page refresh!');\n        } else {\n          toast.success('Login successful!');\n        }\n        return true;\n      } else {\n        toast.error(response.message || 'Invalid username or password');\n        return false;\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      toast.error('Login failed. Please try again.');\n      return false;\n    }\n  };\n  const logout = async () => {\n    try {\n      await authAPI.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      setIsAuthenticated(false);\n      setUser(null);\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('username');\n      localStorage.removeItem('loginTime');\n      toast.success('Logged out successfully!');\n    }\n  };\n  const value = {\n    isAuthenticated,\n    user,\n    loading,\n    login,\n    logout\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"mKb+zX9grAar2iMVStuBBwt7fpw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","checkPersistentLogin","authToken","localStorage","getItem","username","login","password","rememberMe","response","success","setItem","token","Date","now","toString","error","message","console","logout","removeItem","value","style","display","justifyContent","alignItems","height","className","fileName","_jsxFileName","lineNumber","columnNumber","Provider","_c","$RefreshReg$"],"sources":["/home/shubham/Documents/Personal/my-project/react-app/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport toast from 'react-hot-toast';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check for persistent login on mount\n  useEffect(() => {\n    const checkPersistentLogin = () => {\n      const authToken = localStorage.getItem('authToken');\n      const username = localStorage.getItem('username');\n\n      if (authToken && username) {\n        // For JWT tokens, we could validate them here\n        // For now, we'll just check if they exist\n        setIsAuthenticated(true);\n        setUser(username);\n      }\n      setLoading(false);\n    };\n\n    checkPersistentLogin();\n  }, []);\n\n  const login = async (username, password, rememberMe = false) => {\n    try {\n      const response = await authAPI.login(username, password, rememberMe);\n      \n      if (response.success) {\n        setIsAuthenticated(true);\n        setUser(response.user);\n\n        // Store JWT token and user info\n        localStorage.setItem('authToken', response.token);\n        localStorage.setItem('username', response.user);\n        \n        if (rememberMe) {\n          localStorage.setItem('loginTime', (Date.now() / 1000).toString());\n          toast.success('Login successful - You\\'ll stay logged in even after page refresh!');\n        } else {\n          toast.success('Login successful!');\n        }\n\n        return true;\n      } else {\n        toast.error(response.message || 'Invalid username or password');\n        return false;\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      toast.error('Login failed. Please try again.');\n      return false;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await authAPI.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      setIsAuthenticated(false);\n      setUser(null);\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('username');\n      localStorage.removeItem('loginTime');\n      toast.success('Logged out successfully!');\n    }\n  };\n\n  const value = {\n    isAuthenticated,\n    user,\n    loading,\n    login,\n    logout\n  };\n\n  if (loading) {\n    return <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n      <div className=\"spinner\"></div>\n    </div>;\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}